spring.application.name=user-service
server.port=8081

# register eureka server
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.hostname=localhost

# setup mysql
spring.datasource.url=${spring.datasource.url}
spring.datasource.username=${spring.datasource.username}
spring.datasource.password=${spring.datasource.password}
#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# aws s3
aws.access_key=${aws.access_key}
aws.secret_key=${aws.secret_key}
aws.s3.link_bucket=${aws.s3.link_bucket}
aws.s3.region=${aws.s3.region}
aws.s3.bucket_name=${aws.s3.bucket_name}

# security
security.secret_key=${security.secret_key}
#86,400,000 = 24 * 60 * 60 * 1000 (~ 1 day)
security.time_expired=86400000

# config server client
spring.config.import=configserver:http://localhost:8089
spring.cloud.config.name=common-application

logging.file.name=${path.logging-file}

# config to zipkin
management.tracing.sampling.probability=1.0
# 1.0 is 100 percent (or all req). if you need less than, just try range from 0 to 1.0 (or 0% to 100%)
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
# change display in console log ->  INFO [currency-exchange,trace ID,spans  ID] help us trace it by id
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/span

# redis
time_minutes_expired_otp=2
spring.data.redis.username=${spring.data.redis.username}
spring.data.redis.password=${spring.data.redis.password}
spring.data.redis.host=${spring.data.redis.host}
spring.data.redis.port=${spring.data.redis.port}

# gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${spring.mail.username}
spring.mail.password=${spring.mail.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# kafka
kafka-server=${kafka-server}